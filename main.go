package main

import (
	"encoding/json"
	"game-node-search/search"
	"game-node-search/util"
	"github.com/go-chi/chi/v5"
	"github.com/go-chi/chi/v5/middleware"
	_ "github.com/swaggo/http-swagger/example/go-chi/docs" // docs is generated by Swag CLI, you have to import it.
	"github.com/swaggo/http-swagger/v2"
	"net/http"
)

// @title GameNode Handler API
// @version 1.0
// @description The GameNode Handler API documentation.
// @termsOfService http://swagger.io/terms/

// @contact.name API Support
// @contact.url gamenode.com.br/help
// @contact.email support@gamenode.com.br

// @license.name GNU General Public License
// @license.url http://www.gnu.org/licenses/

// @host search.gamenode.com.br
func main() {
	r := chi.NewRouter()
	r.Use(middleware.Logger)
	r.Mount("/swagger/{param}", httpSwagger.Handler())
	r.Get("/", func(w http.ResponseWriter, r *http.Request) {
		_, err := w.Write([]byte("Hello World!"))
		if err != nil {
			return
		}
	})
	r.Post("/search", func(w http.ResponseWriter, r *http.Request) {
		response := search.Handler(w, r)
		responseBytes, _ := json.Marshal(response)
		w.Header().Set("Content-Type", "application/json")
		w.WriteHeader(http.StatusOK)
		_, _ = w.Write(responseBytes)
		return

	})
	port := util.GetEnv("PORT", ":9000")
	err := http.ListenAndServe(port, r)
	if err != nil {
		return
	}
}
